apiVersion: v1

kind: ConfigMap
metadata:
  name: telegraf-config
data:
  telegraf.conf: |+
    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################

    # Configuration for influxdb server to send metrics to
    [[outputs.influxdb]]
      ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
      ## Multiple urls can be specified as part of the same cluster,
      ## this means that only ONE of the urls will be written to each interval.
      # urls = ["udp://localhost:8089"] # UDP endpoint example
      urls = ["$INFLUXDB_URL"] # required ✨
      ## The target database for metrics (telegraf will create it if not exists).
      database = "$INFLUXDB_DB" # required
      ## Retention policy to write to.
      retention_policy = "default"
      ## Precision of writes, valid values are "ns", "us" (or "µs"), "ms", "s", "m", "h".
      ## note: using "s" precision greatly improves InfluxDB compression.
      precision = "s"

      ## Write timeout (for the InfluxDB client), formatted as a string.
      ## If not provided, will default to 5s. 0s means no timeout (not recommended).
      timeout = "5s"
      username = "$INFLUXDB_USER"
      password = "$INFLUXDB_USER_PASSWORD"

    ###############################################################################
    #                            INPUT PLUGINS                                    #
    ###############################################################################


    [[inputs.dns_query]]
      ## servers to query
      servers = ["8.8.8.8"]
      domains = ["mozilla.org"]

    # Statsd Server
    [[inputs.statsd]]
      ## Protocol, must be "tcp", "udp4", "udp6" or "udp" (default=udp)
      protocol = "udp"

      ## MaxTCPConnection - applicable when protocol is set to tcp (default=250)
      max_tcp_connections = 250

      ## Enable TCP keep alive probes (default=false)
      tcp_keep_alive = false

      ## Specifies the keep-alive period for an active network connection.
      ## Only applies to TCP sockets and will be ignored if tcp_keep_alive is false.
      ## Defaults to the OS configuration.
      # tcp_keep_alive_period = "2h"

      ## Address and port to host UDP listener on
      service_address = ":8125"

      ## The following configuration options control when telegraf clears it's cache
      ## of previous values. If set to false, then telegraf will only clear it's
      ## cache when the daemon is restarted.
      ## Reset gauges every interval (default=true)
      delete_gauges = true
      ## Reset counters every interval (default=true)
      delete_counters = true
      ## Reset sets every interval (default=true)
      delete_sets = true
      ## Reset timings & histograms every interval (default=true)
      delete_timings = true

      ## Percentiles to calculate for timing & histogram stats.
      percentiles = [50.0, 90.0, 99.0, 99.9, 99.95, 100.0]

      ## separator to use between elements of a statsd metric
      metric_separator = "_"

      ## Parses tags in the datadog statsd format
      ## http://docs.datadoghq.com/guides/dogstatsd/
      ## deprecated in 1.10; use datadog_extensions option instead
      # parse_data_dog_tags = true

      ## Parses extensions to statsd in the datadog statsd format
      ## currently supports metrics and datadog tags.
      ## http://docs.datadoghq.com/guides/dogstatsd/
      datadog_extensions = true

      ## Statsd data translation templates, more info can be read here:
      ## https://github.com/influxdata/telegraf/blob/master/docs/TEMPLATE_PATTERN.md
      # templates = [
      #     "cpu.* measurement*"
      # ]

      ## Number of UDP messages allowed to queue up, once filled,
      ## the statsd server will start dropping packets
      allowed_pending_messages = 10000

      ## Number of timing/histogram values to track per-measurement in the
      ## calculation of percentiles. Raising this limit increases the accuracy
      ## of percentiles but also increases the memory usage and cpu time.
      percentile_limit = 1000

      ## Maximum socket buffer size in bytes, once the buffer fills up, metrics
      ## will start dropping.  Defaults to the OS default.
      # read_buffer_size = 65535
